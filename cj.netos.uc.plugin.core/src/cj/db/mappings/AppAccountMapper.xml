<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cj.netos.uc.plugin.mapper.AppAccountMapper">
  <resultMap id="BaseResultMap" type="cj.netos.uc.model.AppAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <id column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="account_code" jdbcType="VARCHAR" property="accountCode" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="name_kind" jdbcType="TINYINT" property="nameKind" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="account_pwd" jdbcType="VARCHAR" property="accountPwd" />
    <result column="is_enable" jdbcType="TINYINT" property="isEnable" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    account_id, account_code, app_id, nick_name, avatar, signature, name_kind, user_id, 
    account_pwd, is_enable, create_time
  </sql>
  <select id="selectByExample" parameterType="cj.netos.uc.model.AppAccountExample" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from app_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select 
    <include refid="Base_Column_List" />
    from app_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from app_account
    where account_id = #{accountId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cj.netos.uc.model.AppAccountExample">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    delete from app_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cj.netos.uc.model.AppAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into app_account (account_id, account_code, app_id, 
      nick_name, avatar, signature, 
      name_kind, user_id, account_pwd, 
      is_enable, create_time)
    values (#{accountId,jdbcType=VARCHAR}, #{accountCode,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, 
      #{nameKind,jdbcType=TINYINT}, #{userId,jdbcType=VARCHAR}, #{accountPwd,jdbcType=VARCHAR}, 
      #{isEnable,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cj.netos.uc.model.AppAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    insert into app_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="accountCode != null">
        account_code,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="avatar != null">
        avatar,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="nameKind != null">
        name_kind,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="accountPwd != null">
        account_pwd,
      </if>
      <if test="isEnable != null">
        is_enable,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="accountCode != null">
        #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="nameKind != null">
        #{nameKind,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="accountPwd != null">
        #{accountPwd,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        #{isEnable,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cj.netos.uc.model.AppAccountExample" resultType="java.lang.Long">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    select count(*) from app_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update app_account
    <set>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountCode != null">
        account_code = #{record.accountCode,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.avatar != null">
        avatar = #{record.avatar,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.nameKind != null">
        name_kind = #{record.nameKind,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.accountPwd != null">
        account_pwd = #{record.accountPwd,jdbcType=VARCHAR},
      </if>
      <if test="record.isEnable != null">
        is_enable = #{record.isEnable,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update app_account
    set account_id = #{record.accountId,jdbcType=VARCHAR},
      account_code = #{record.accountCode,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      avatar = #{record.avatar,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      name_kind = #{record.nameKind,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=VARCHAR},
      account_pwd = #{record.accountPwd,jdbcType=VARCHAR},
      is_enable = #{record.isEnable,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cj.netos.uc.model.AppAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update app_account
    <set>
      <if test="accountCode != null">
        account_code = #{accountCode,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null">
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="nameKind != null">
        name_kind = #{nameKind,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="accountPwd != null">
        account_pwd = #{accountPwd,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null">
        is_enable = #{isEnable,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cj.netos.uc.model.AppAccount">
    <!-- @mbg.generated: generated automatically, do not modify! -->
    update app_account
    set account_code = #{accountCode,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      avatar = #{avatar,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      name_kind = #{nameKind,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=VARCHAR},
      account_pwd = #{accountPwd,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where account_id = #{accountId,jdbcType=VARCHAR}
  </update>

  <update id="updateAccountEnable">
    update app_account
    set is_enable =#{enable,jdbcType=TINYINT}
    where account_id=#{accountid,jdbcType=VARCHAR}
  </update>
  <update id="updatePwd">
    update app_account
    set account_pwd =#{newpwd,jdbcType=VARCHAR}
    where account_id=#{accountid,jdbcType=VARCHAR}
  </update>
  <select id="pageAccount" resultMap="BaseResultMap">
    select ta.* from app_account ta
    where ta.app_id=#{appid}
    limit #{currPage},#{pageSize}
  </select>
</mapper>
2019年08月12日 00:31:32  信息 : -------------网关启动完毕-------------------
2019年08月12日 00:31:38  信息 : 已装载共享库/Users/cj/studio/cj.studio.backend.uc/cmdtools/gateway-2.3.6/lib/share
2019年08月12日 00:31:38  错误: cj.studio.ecm.container.factory.SingleonServiceInstanceFactory - 服务:auth.password构建失败，原因：java.lang.RuntimeException: java.lang.RuntimeException: cj.studio.ecm.EcmException: java.lang.ClassNotFoundException: UserMapper
2019年08月12日 00:31:38  错误: cj.studio.gateway.server.handler.HttpChannelHandler -  异常：cj.studio.ecm.EcmException: java.lang.RuntimeException: java.lang.RuntimeException: cj.studio.ecm.EcmException: java.lang.ClassNotFoundException: UserMapper
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:78)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
	Cause by:
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:160)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:160)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at cj.studio.orm.mybatis.MyBatisPlugin.getService(MyBatisPlugin.java:43)
		at cj.studio.ecm.Assembly$EntryPoint.getService(Assembly.java:556)
		at cj.studio.ecm.Assembly$ProviderLinker.getService(Assembly.java:460)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:98)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
		at cj.studio.ecm.resource.JarClassLoader.loadClass(JarClassLoader.java:634)
		at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
		at java.lang.Class.forName0(Class.java:-2)
		at java.lang.Class.forName(Class.java:264)
		at cj.studio.orm.mybatis.MyBatisPlugin.getService(MyBatisPlugin.java:41)
		at cj.studio.ecm.Assembly$EntryPoint.getService(Assembly.java:556)
		at cj.studio.ecm.Assembly$ProviderLinker.getService(Assembly.java:460)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:98)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
2019年08月12日 10:01:53  信息 : 已装载共享库/Users/cj/studio/cj.studio.backend.uc/cmdtools/gateway-2.3.6/lib/share
2019年08月12日 10:01:54  错误: cj.studio.ecm.container.factory.SingleonServiceInstanceFactory - 服务:auth.password构建失败，原因：java.lang.RuntimeException: java.lang.RuntimeException: cj.studio.ecm.EcmException: java.lang.ClassNotFoundException: UserMapper
2019年08月12日 10:01:54  错误: cj.studio.gateway.server.handler.HttpChannelHandler -  异常：cj.studio.ecm.EcmException: java.lang.RuntimeException: java.lang.RuntimeException: cj.studio.ecm.EcmException: java.lang.ClassNotFoundException: UserMapper
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:78)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
	Cause by:
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:160)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:160)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at cj.studio.orm.mybatis.MyBatisPlugin.getService(MyBatisPlugin.java:43)
		at cj.studio.ecm.Assembly$EntryPoint.getService(Assembly.java:556)
		at cj.studio.ecm.Assembly$ProviderLinker.getService(Assembly.java:460)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:98)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
		at cj.studio.ecm.resource.JarClassLoader.loadClass(JarClassLoader.java:634)
		at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
		at java.lang.Class.forName0(Class.java:-2)
		at java.lang.Class.forName(Class.java:264)
		at cj.studio.orm.mybatis.MyBatisPlugin.getService(MyBatisPlugin.java:41)
		at cj.studio.ecm.Assembly$EntryPoint.getService(Assembly.java:556)
		at cj.studio.ecm.Assembly$ProviderLinker.getService(Assembly.java:460)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:98)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
2019年08月12日 10:02:20  信息 : 已装载共享库/Users/cj/studio/cj.studio.backend.uc/cmdtools/gateway-2.3.6/lib/share
2019年08月12日 10:02:20  错误: cj.studio.ecm.container.factory.SingleonServiceInstanceFactory - 服务:auth.password构建失败，原因：java.lang.RuntimeException: java.lang.RuntimeException: cj.studio.ecm.EcmException: java.lang.ClassNotFoundException: UserMapper
2019年08月12日 10:02:20  错误: cj.studio.gateway.server.handler.HttpChannelHandler -  异常：cj.studio.ecm.EcmException: java.lang.RuntimeException: java.lang.RuntimeException: cj.studio.ecm.EcmException: java.lang.ClassNotFoundException: UserMapper
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:78)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
	Cause by:
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:160)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:160)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at cj.studio.orm.mybatis.MyBatisPlugin.getService(MyBatisPlugin.java:43)
		at cj.studio.ecm.Assembly$EntryPoint.getService(Assembly.java:556)
		at cj.studio.ecm.Assembly$ProviderLinker.getService(Assembly.java:460)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:98)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
		at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
		at cj.studio.ecm.resource.JarClassLoader.loadClass(JarClassLoader.java:634)
		at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
		at java.lang.Class.forName0(Class.java:-2)
		at java.lang.Class.forName(Class.java:264)
		at cj.studio.orm.mybatis.MyBatisPlugin.getService(MyBatisPlugin.java:41)
		at cj.studio.ecm.Assembly$EntryPoint.getService(Assembly.java:556)
		at cj.studio.ecm.Assembly$ProviderLinker.getService(Assembly.java:460)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:98)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:313)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.getService(ServiceInstanceFactory.java:156)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.getService(SingleonServiceInstanceFactory.java:93)
		at cj.studio.ecm.container.ServiceContainer.getService(ServiceContainer.java:76)
		at cj.studio.ecm.context.ModuleSite.getService(ModuleSite.java:121)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialServiceRef(ServiceInstanceFactory.java:296)
		at cj.studio.ecm.container.factory.ServiceInstanceFactory.initialService(ServiceInstanceFactory.java:205)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.instanceSingleonServices(SingleonServiceInstanceFactory.java:72)
		at cj.studio.ecm.container.factory.SingleonServiceInstanceFactory.refresh(SingleonServiceInstanceFactory.java:46)
		at cj.studio.ecm.context.ModuleSite.registerAndRefreshInstanceFactories(ModuleSite.java:331)
		at cj.studio.ecm.context.ModuleSite.refresh(ModuleSite.java:303)
		at cj.studio.ecm.Assembly.start(Assembly.java:402)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanPluginsAndLoad(AppGatewaySocket.java:209)
		at cj.studio.gateway.socket.app.AppGatewaySocket.scanAssemblyAndLoad(AppGatewaySocket.java:154)
		at cj.studio.gateway.socket.app.AppGatewaySocket.connect(AppGatewaySocket.java:120)
		at cj.studio.gateway.DestinationLoader.load(DestinationLoader.java:40)
		at cj.studio.gateway.GatewaySocketContainer.getAndCreate(GatewaySocketContainer.java:36)
		at cj.studio.gateway.server.handler.HttpChannelHandler.pipelineHttpBuild(HttpChannelHandler.java:504)
		at cj.studio.gateway.server.handler.HttpChannelHandler.flowHttpRequest(HttpChannelHandler.java:476)
		at cj.studio.gateway.server.handler.HttpChannelHandler.handleHttpRequest(HttpChannelHandler.java:218)
		at cj.studio.gateway.server.handler.HttpChannelHandler.messageReceived(HttpChannelHandler.java:114)
		at io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:103)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)
		at io.netty.handler.codec.MessageToMessageCodec.channelRead(MessageToMessageCodec.java:111)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:154)
		at io.netty.channel.ChannelHandlerInvokerUtil.invokeChannelReadNow(ChannelHandlerInvokerUtil.java:74)
		at io.netty.channel.DefaultChannelHandlerInvoker.invokeChannelRead(DefaultChannelHandlerInvoker.java:138)
		at io.netty.channel.DefaultChannelHandlerContext.fireChannelRead(DefaultChannelHandlerContext.java:320)
		at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:846)
		at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:127)
		at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:485)
		at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:452)
		at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:346)
		at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:794)
		at java.lang.Thread.run(Thread.java:748)
2019年08月17日 00:40:58  信息 : -------------网关启动完毕-------------------
2019年08月17日 00:53:38  信息 : 已装载共享库/Users/cj/studio/cj.studio.backend.uc/cmdtools/gateway-2.3.6/lib/share
2019年08月17日 00:53:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:53:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:53:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:53:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:53:40  信息: cj.studio.openport.client.DefaultOpenportsServicesMonitor - Openports 初始化完成
2019年08月17日 00:53:40  信息 : 系统开放api地址是：/portsapi
2019年08月17日 00:53:40  信息 : 发现安全服务：/tenant.service，类型：TenantStub
2019年08月17日 00:53:40  信息 : 		服务命令：getTenantCount
2019年08月17日 00:53:40  信息 : 		服务命令：pageTenant
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：pageAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeTenant
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getSegmentsOfTenant
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addSegmentOfTenant
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：sort int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addTenant
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tenantName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：ownerCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：ownerType java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeSegmentOfTenant
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptySegmentsOfTenant
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addTenantAttribute
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：value java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeTenantAttribute
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptyTenantAttributes
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getTenantAttributes
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getTenantAttribute
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：setCompanyOnTenant
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：face java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountCount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getTenant
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/authentication.service，类型：AuthenticationStub
2019年08月17日 00:53:40  信息 : 		服务命令：getAuthenticatorInfo
2019年08月17日 00:53:40  信息 : 				参数：authName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：enumAuthenticatorNames
2019年08月17日 00:53:40  信息 : 		服务命令：authenticate
2019年08月17日 00:53:40  信息 : 				参数：authName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tenant java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：principals java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：password java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：ttlMillis long parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/company.service，类型：CompanyStub
2019年08月17日 00:53:40  信息 : 		服务命令：getCompany
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：page
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addCompany
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：cnname java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：enname java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeCompany
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addCompanyAttribute
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：value java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeCompanyAttribute
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getCompanyAttribute
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptyCompanyAttributes
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getCompanyAttributes
2019年08月17日 00:53:40  信息 : 				参数：companyCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getSegmentsOfCompany
2019年08月17日 00:53:40  信息 : 		服务命令：addSegmentOfCompany
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：sort int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeSegmentOfCompany
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptySegmentsOfCompany
2019年08月17日 00:53:40  信息 : 发现安全服务：/tenant/organization.service，类型：OrganizationStub
2019年08月17日 00:53:40  信息 : 		服务命令：addOrganization
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：pid java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：comment java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeOrganization
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getOrganization
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getOrganizationCount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listChilds
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：pid java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountsOnOrg
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：pageAccountsOnOrg
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addAccountOnOrg
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeAccountOnOrg
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptyAccountsOnOrg
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：orgCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：childCount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：pid java.lang.String parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/role.service，类型：GlobalRoleStub
2019年08月17日 00:53:40  信息 : 		服务命令：removeRole
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addRole
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：comment java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getRole
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getRoleCount
2019年08月17日 00:53:40  信息 : 		服务命令：getUsersOnRole
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addUserOnRole
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeUserOnRole
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptyUsersOnRole
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getPage
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/user.service，类型：UserStub
2019年08月17日 00:53:40  信息 : 		服务命令：getUsersByAttrValue
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：value java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getPage
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：saveUser
2019年08月17日 00:53:40  信息 : 				参数：user User content
2019年08月17日 00:53:40  信息 : 		服务命令：getUserCount
2019年08月17日 00:53:40  信息 : 		服务命令：removeUser
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addUserAttribute
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：value java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeUserAttribute
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getUserAttribute
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptyUserAttributes
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getUserAttributes
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountOfUserOnTenant
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listAccountOfUser
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listGlobalRoleOfUser
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listTenantRoleOfUser
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listTenantPostOfUser
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listTenantGroupOfUser
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getUser
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listTenantOrganizationOfUser
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getSegmentsOfUser
2019年08月17日 00:53:40  信息 : 		服务命令：addSegmentOfUser
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：sort int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeSegmentOfUser
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptySegmentsOfUser
2019年08月17日 00:53:40  信息 : 发现安全服务：/tenant/group.service，类型：TenantGroupStub
2019年08月17日 00:53:40  信息 : 		服务命令：getGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：pageGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：comment java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountsOnGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：pageAccountsOnGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addAccountOnGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeAccountOnGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptyAccountsOnGroup
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：groupCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/app.service，类型：AppStub
2019年08月17日 00:53:40  信息 : 		服务命令：addApp
2019年08月17日 00:53:40  信息 : 				参数：code java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：name java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：href java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：icon java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：tips java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：comment java.lang.String parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/tenant/post.service，类型：TenantPostStub
2019年08月17日 00:53:40  信息 : 		服务命令：removePost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountsOnPost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：pageAccountsOnPost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addAccountOnPost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeAccountOnPost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptyAccountsOnPost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：pagePost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addPost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：comment java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getPost
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：postCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/segment.service，类型：SegmentStub
2019年08月17日 00:53:40  信息 : 		服务命令：removeSegment
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getSegmentCount
2019年08月17日 00:53:40  信息 : 		服务命令：emptyAttributesOfSegment
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeAttribute
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addAttribute
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：type java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：sort int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getSegment
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addSegment
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：version java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAttributesOfSegment
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getPage
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/tenant/role.service，类型：TenantRoleStub
2019年08月17日 00:53:40  信息 : 		服务命令：emptyAccountsOnRole
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeAccountOnRole
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addAccountOnRole
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountsOnRole
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：page
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeRole
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addRole
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleName java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：comment java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getRole
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：roleCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getRoleCount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/password.service，类型：PasswordStub
2019年08月17日 00:53:40  信息 : 		服务命令：setPassword
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：pwd java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：updatePassword
2019年08月17日 00:53:40  信息 : 				参数：userCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：oldpwd java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：newpwd java.lang.String parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/tenantToken.service，类型：TenantTokenStub
2019年08月17日 00:53:40  信息 : 		服务命令：genToken
2019年08月17日 00:53:40  信息 : 				参数：tenant java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：user java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：pwd java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：ttlMillis long parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/tenant/account.service，类型：AccountStub
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountCount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getSegmentsOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addSegmentOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：sort int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeSegmentOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptySegmentsOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：addAccountAttribute
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：value java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：removeAccountAttribute
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：emptyAccountAttributes
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountAttributes
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listGlobalRoleOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getPage
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：currPage int parameter
2019年08月17日 00:53:40  信息 : 				参数：pageSize int parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listTenantRoleOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listTenantPostOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listTenantGroupOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：listTenantOrganizationOfAccount
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：accountCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：getAccountByAttrValue
2019年08月17日 00:53:40  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：segCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：attrCode java.lang.String parameter
2019年08月17日 00:53:40  信息 : 				参数：value java.lang.String parameter
2019年08月17日 00:53:40  信息 : 发现安全服务：/token.service，类型：TokenStub
2019年08月17日 00:53:40  信息 : 		服务命令：verify
2019年08月17日 00:53:40  信息 : 				参数：token java.lang.String parameter
2019年08月17日 00:53:40  信息 : 		服务命令：parse
2019年08月17日 00:53:40  信息 : 				参数：token java.lang.String parameter
2019年08月17日 00:53:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:53:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:53:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:56:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:56:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 00:56:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:06:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:06:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:06:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:08:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:08:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:08:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:12:21  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:12:21  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:12:21  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:13:54  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:13:54  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:13:54  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:16:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:16:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:16:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:17:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:17:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:17:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:19:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:19:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:19:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:31:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:31:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:31:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:33:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:33:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:33:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:35:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:35:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:35:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:38:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:38:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月17日 01:38:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:23:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:23:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:23:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:25:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:25:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:25:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:27:10  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:27:10  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:27:10  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:31:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:31:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:31:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:34:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:34:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 21:34:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 23:05:37  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 23:05:37  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月18日 23:05:37  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:05:58  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:05:58  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:05:58  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:11:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:11:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:11:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:15:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:15:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:15:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:18:33  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:18:33  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月19日 13:18:33  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 16:20:02  信息 : -------------网关启动完毕-------------------
2019年08月20日 18:21:14  信息 : 已装载共享库/Users/cj/studio/cj.studio.backend.uc/cmdtools/gateway-2.3.6/lib/share
2019年08月20日 18:21:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:21:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:21:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:21:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:21:16  信息: cj.studio.openport.client.DefaultOpenportsServicesMonitor - Openports 初始化完成
2019年08月20日 18:21:16  信息 : 系统开放api地址是：/portsapi
2019年08月20日 18:21:16  信息 : 发现安全服务：/tenant.service，类型：TenantStub
2019年08月20日 18:21:16  信息 : 		服务命令：getTenantCount
2019年08月20日 18:21:16  信息 : 		服务命令：pageTenant
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：pageAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：face java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountCount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addTenant
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tenantName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：ownerCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：ownerType java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeTenant
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getSegmentsOfTenant
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addSegmentOfTenant
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：sort int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeSegmentOfTenant
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptySegmentsOfTenant
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addTenantAttribute
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：value java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeTenantAttribute
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyTenantAttributes
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getTenantAttributes
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getTenantAttribute
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：setCompanyOnTenant
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getTenant
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/authentication.service，类型：AuthenticationStub
2019年08月20日 18:21:16  信息 : 		服务命令：getAuthenticatorInfo
2019年08月20日 18:21:16  信息 : 				参数：authName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：enumAuthenticatorNames
2019年08月20日 18:21:16  信息 : 		服务命令：authenticate
2019年08月20日 18:21:16  信息 : 				参数：authName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tenant java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：principals java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：password java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：ttlMillis long parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/company.service，类型：CompanyStub
2019年08月20日 18:21:16  信息 : 		服务命令：getCompany
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：page
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addCompany
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：cnname java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：enname java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeCompany
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addCompanyAttribute
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：value java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeCompanyAttribute
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getCompanyAttribute
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyCompanyAttributes
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getCompanyAttributes
2019年08月20日 18:21:16  信息 : 				参数：companyCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getSegmentsOfCompany
2019年08月20日 18:21:16  信息 : 		服务命令：addSegmentOfCompany
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：sort int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeSegmentOfCompany
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptySegmentsOfCompany
2019年08月20日 18:21:16  信息 : 发现安全服务：/tenant/organization.service，类型：OrganizationStub
2019年08月20日 18:21:16  信息 : 		服务命令：addOrganization
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：pid java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：comment java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeOrganization
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getOrganization
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getOrganizationCount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listChilds
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：pid java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountsOnOrg
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：pageAccountsOnOrg
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addAccountOnOrg
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeAccountOnOrg
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyAccountsOnOrg
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：orgCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：childCount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：pid java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/role.service，类型：GlobalRoleStub
2019年08月20日 18:21:16  信息 : 		服务命令：getPage
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getUsersOnRole
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeRole
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addUserOnRole
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeUserOnRole
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyUsersOnRole
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getRole
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getRoleCount
2019年08月20日 18:21:16  信息 : 		服务命令：addRole
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：comment java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/user.service，类型：UserStub
2019年08月20日 18:21:16  信息 : 		服务命令：getPage
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：saveUser
2019年08月20日 18:21:16  信息 : 				参数：user User content
2019年08月20日 18:21:16  信息 : 		服务命令：getUser
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getUserCount
2019年08月20日 18:21:16  信息 : 		服务命令：removeUser
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addUserAttribute
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：value java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeUserAttribute
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getUserAttribute
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyUserAttributes
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getUserAttributes
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountOfUserOnTenant
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listAccountOfUser
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listGlobalRoleOfUser
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listTenantRoleOfUser
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listTenantPostOfUser
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listTenantGroupOfUser
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listTenantOrganizationOfUser
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getSegmentsOfUser
2019年08月20日 18:21:16  信息 : 		服务命令：addSegmentOfUser
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：sort int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeSegmentOfUser
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptySegmentsOfUser
2019年08月20日 18:21:16  信息 : 		服务命令：getUsersByAttrValue
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：value java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/tenant/group.service，类型：TenantGroupStub
2019年08月20日 18:21:16  信息 : 		服务命令：getGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：pageGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：comment java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountsOnGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：pageAccountsOnGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addAccountOnGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeAccountOnGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyAccountsOnGroup
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：groupCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/app.service，类型：AppStub
2019年08月20日 18:21:16  信息 : 		服务命令：addApp
2019年08月20日 18:21:16  信息 : 				参数：code java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：name java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：href java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：icon java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：tips java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：comment java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/tenant/post.service，类型：TenantPostStub
2019年08月20日 18:21:16  信息 : 		服务命令：pagePost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addPost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：comment java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getPost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removePost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountsOnPost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：pageAccountsOnPost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addAccountOnPost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeAccountOnPost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyAccountsOnPost
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：postCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/segment.service，类型：SegmentStub
2019年08月20日 18:21:16  信息 : 		服务命令：getPage
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getSegment
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addSegment
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：version java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAttributesOfSegment
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeAttribute
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addAttribute
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：type java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：sort int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeSegment
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getSegmentCount
2019年08月20日 18:21:16  信息 : 		服务命令：emptyAttributesOfSegment
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/tenant/role.service，类型：TenantRoleStub
2019年08月20日 18:21:16  信息 : 		服务命令：page
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeRole
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getRole
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getRoleCount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addRole
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleName java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：comment java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyAccountsOnRole
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeAccountOnRole
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addAccountOnRole
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountsOnRole
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：roleCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/password.service，类型：PasswordStub
2019年08月20日 18:21:16  信息 : 		服务命令：updatePassword
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：oldpwd java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：newpwd java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：setPassword
2019年08月20日 18:21:16  信息 : 				参数：userCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：pwd java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/tenantToken.service，类型：TenantTokenStub
2019年08月20日 18:21:16  信息 : 		服务命令：genToken
2019年08月20日 18:21:16  信息 : 				参数：tenant java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：user java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：pwd java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：ttlMillis long parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/tenant/account.service，类型：AccountStub
2019年08月20日 18:21:16  信息 : 		服务命令：getPage
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：currPage int parameter
2019年08月20日 18:21:16  信息 : 				参数：pageSize int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountCount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getSegmentsOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addSegmentOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：sort int parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeSegmentOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptySegmentsOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：addAccountAttribute
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：value java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：removeAccountAttribute
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：emptyAccountAttributes
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountAttributes
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listGlobalRoleOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccountByAttrValue
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：segCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：attrCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：value java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：getAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listTenantRoleOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listTenantPostOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listTenantGroupOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：listTenantOrganizationOfAccount
2019年08月20日 18:21:16  信息 : 				参数：tenantCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 				参数：accountCode java.lang.String parameter
2019年08月20日 18:21:16  信息 : 发现安全服务：/token.service，类型：TokenStub
2019年08月20日 18:21:16  信息 : 		服务命令：verify
2019年08月20日 18:21:16  信息 : 				参数：token java.lang.String parameter
2019年08月20日 18:21:16  信息 : 		服务命令：parse
2019年08月20日 18:21:16  信息 : 				参数：token java.lang.String parameter
2019年08月20日 18:21:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:21:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:21:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:56:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:56:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 18:56:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 19:14:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 19:14:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 19:14:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 19:15:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 19:15:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 19:15:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:16:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:16:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:16:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:16:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:16:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:16:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:44:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:44:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 20:44:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:26:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:26:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:26:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:26:34  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:26:34  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:26:34  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:29:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:29:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:29:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:33:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:33:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:33:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:35:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:35:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:35:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:40:41  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:40:41  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:40:41  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:44:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:44:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:44:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:46:30  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:46:30  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:46:30  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:47:39  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:47:39  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:47:39  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:57:42  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:57:42  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:57:42  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:59:20  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:59:20  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 21:59:20  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:00:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:00:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:00:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:02:26  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:02:26  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:02:26  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:05:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:05:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:05:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:13:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:13:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:13:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:15:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:15:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:15:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:25:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:25:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:25:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:27:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:27:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:27:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:29:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:29:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:29:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:33:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:33:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:33:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:34:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:34:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:34:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:36:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:36:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:36:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:38:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:38:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:38:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:39:29  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:39:29  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:39:29  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:46:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:46:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:46:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:50:29  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:50:29  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:50:29  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:51:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:51:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:51:45  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:54:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:54:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:54:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:54:53  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:54:53  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:54:53  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:55:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:55:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:55:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:57:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:57:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 22:57:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:02:23  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:02:23  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:02:23  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:04:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:04:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:04:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:05:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:05:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:05:28  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:06:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:06:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:06:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:08:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:08:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月20日 23:08:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:56:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:56:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:56:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:58:04  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:58:04  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:58:04  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:59:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:59:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 11:59:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:01:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:01:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:01:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:17:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:17:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:17:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:20:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:20:25  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:20:25  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 12:20:25  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:25:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:25:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:25:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:29:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:29:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:29:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:31:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:31:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:31:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:36:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:36:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:36:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:39:33  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:39:33  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:39:33  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:40:34  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:40:34  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:40:34  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:41:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:41:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:41:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:43:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:43:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:43:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:45:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:45:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 13:45:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 15:11:03  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 15:11:03  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 15:11:03  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 17:13:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 17:13:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 17:13:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 22:05:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 22:05:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月21日 22:05:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:31:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:31:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:31:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:32:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:32:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:32:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:51:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:51:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:51:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:53:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:53:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:53:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:55:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:55:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 19:55:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:05:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:05:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:05:06  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:06:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:06:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:06:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:08:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:08:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:08:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:09:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:09:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:09:40  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:10:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:10:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:10:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:22:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:22:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:22:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:33:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:33:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:33:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:36:07  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:36:07  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:36:07  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:38:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:38:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 20:38:22  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:05:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:05:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:05:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:07:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:07:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:07:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:20:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:20:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:20:49  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:32:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:32:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:32:13  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:36:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:36:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:36:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:50:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:50:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月22日 21:50:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 13:29:42  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 13:29:42  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 13:29:42  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:20:53  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:20:53  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:20:53  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:24:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:24:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:24:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:29:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:29:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:29:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:31:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:31:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:31:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:32:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:32:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:32:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:34:25  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:34:25  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:34:25  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:39:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:39:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:39:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:42:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:42:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:42:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:44:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:44:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:44:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:50:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:50:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:50:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:51:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:51:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:51:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:52:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:52:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:52:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:53:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:53:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:53:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:55:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:55:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:55:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:57:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:57:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:57:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:58:48  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:58:48  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 14:58:48  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:02:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:02:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:02:31  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:03:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:03:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:03:43  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:05:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:05:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:05:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:09:05  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:09:05  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:09:05  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:13:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:13:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:13:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:14:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:14:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:14:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:15:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:15:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:15:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:44:26  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:44:26  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 15:44:26  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 17:35:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 17:35:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月23日 17:35:24  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:17:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:17:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:17:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:17:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:17:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:17:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:44:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:44:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:44:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:47:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:47:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:47:38  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:54:48  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:54:48  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:54:48  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:57:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:57:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 13:57:16  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:01:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:01:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:01:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:18:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:18:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:18:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:30:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:30:01  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:30:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:40:09  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:40:09  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:40:09  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:42:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:42:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:42:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:52:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:52:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 14:52:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:03:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:03:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:03:19  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:16:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:16:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:16:27  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:45:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:45:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 15:45:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:00:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:00:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:00:51  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:21:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:21:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:21:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:27:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:27:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:27:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:42:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:42:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:42:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:44:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:44:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:44:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:57:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:57:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 16:57:32  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 17:04:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 17:04:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 17:04:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 18:52:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 18:52:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 18:52:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 18:56:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 18:56:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 18:56:15  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:10:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:10:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:10:00  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:11:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:11:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:11:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:12:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:12:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:12:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:57:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:57:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 19:57:59  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:11:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:11:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:11:44  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:35:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:35:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:35:02  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:44:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:44:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:44:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:47:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:47:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 20:47:18  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 21:16:17  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 21:16:17  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月24日 21:16:17  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:01:30  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:01:30  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:01:30  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:03:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:03:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:03:14  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:09:04  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:09:04  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:09:04  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:28:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:28:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:28:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:40:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:40:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 16:40:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:22:10  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:22:10  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:22:11  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:53:10  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:53:10  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:53:10  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:59:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:59:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 19:59:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:09:09  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:09:09  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:09:09  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:10:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:10:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:10:47  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:16:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:16:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:16:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:24:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:24:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:24:12  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:40:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:40:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:40:57  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:42:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:42:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:42:50  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:54:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:54:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 20:54:46  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:15:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:15:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:15:36  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:34:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:34:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:34:56  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:35:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:35:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 21:35:55  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 22:43:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 22:43:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 22:43:35  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:10:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:10:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:10:52  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:21:39  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:21:39  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:21:39  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:24:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:24:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:24:08  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:29:21  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:29:21  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
2019年08月26日 23:29:21  调试: cj.studio.orm.mybatis.SafeSqlSessionFactory - SqlSession closed.
